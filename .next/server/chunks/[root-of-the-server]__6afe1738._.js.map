{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///C:/wamp64/www/whatsssss/src/app/api/auth/login/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport axios from \"axios\";\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { userNameOrEmailAddress, password, rememberMe } = body;\n\n    // التحقق من وجود البيانات المطلوبة\n    if (!userNameOrEmailAddress || !password) {\n      return NextResponse.json(\n        {\n          success: false,\n          error: {\n            message: \"اسم المستخدم وكلمة المرور مطلوبان\",\n          },\n        },\n        { status: 400 }\n      );\n    }\n\n    // إرسال طلب تسجيل الدخول إلى NeoSend API\n    const config = {\n      method: \"POST\",\n      maxBodyLength: Infinity,\n      url: \"https://neosending.com/api/account/login\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"text/plain\",\n        \"User-Agent\":\n          \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\",\n      },\n      data: JSON.stringify({\n        password: password,\n        userNameOrEmailAddress: userNameOrEmailAddress,\n        rememberMe: rememberMe || false,\n      }),\n      timeout: 10000, // 10 seconds timeout\n    };\n\n    console.log(\"Attempting login to NeoSend API...\");\n    const response = await axios.request(config);\n\n    console.log(\"NeoSend API Response:\", response.status, response.statusText);\n    console.log(\"Response data:\", response.data);\n\n    // تحقق من نوع الاستجابة وتحويلها إلى التنسيق المتوقع\n    const responseData = response.data;\n\n    // إذا كانت الاستجابة تحتوي على result = 1، فهذا يعني نجاح\n    if (responseData.result === 1 || responseData.description === \"Success\") {\n      return NextResponse.json({\n        success: true,\n        result: {\n          accessToken: responseData.accessToken || \"mock-token-\" + Date.now(),\n          encryptedAccessToken: responseData.encryptedAccessToken || \"\",\n          expireInSeconds: responseData.expireInSeconds || 3600,\n          userId: responseData.userId || 1,\n          user: responseData.user || {\n            id: 1,\n            userName: userNameOrEmailAddress,\n            name: userNameOrEmailAddress,\n            surname: \"\",\n            emailAddress: userNameOrEmailAddress.includes(\"@\")\n              ? userNameOrEmailAddress\n              : \"\",\n            isActive: true,\n          },\n        },\n      });\n    } else {\n      // إذا كانت الاستجابة تشير إلى فشل\n      return NextResponse.json({\n        success: false,\n        error: {\n          message: responseData.error?.message || \"فشل في تسجيل الدخول\",\n          code: responseData.error?.code || \"LOGIN_FAILED\",\n        },\n      });\n    }\n  } catch (error: any) {\n    console.error(\"Login API Error:\", error);\n\n    // التعامل مع أخطاء axios\n    if (error.response) {\n      // الخادم أرجع استجابة مع كود خطأ\n      console.error(\n        \"Response error:\",\n        error.response.status,\n        error.response.data\n      );\n      return NextResponse.json(\n        {\n          success: false,\n          error: {\n            message:\n              error.response.data?.error?.message ||\n              \"خطأ في بيانات تسجيل الدخول\",\n            code: error.response.status,\n          },\n        },\n        { status: error.response.status }\n      );\n    } else if (error.request) {\n      // الطلب تم إرساله لكن لم يتم استلام استجابة\n      console.error(\"Request error:\", error.request);\n      return NextResponse.json(\n        {\n          success: false,\n          error: {\n            message: \"فشل في الاتصال بخادم NeoSend. تحقق من الاتصال بالإنترنت.\",\n            code: \"NETWORK_ERROR\",\n          },\n        },\n        { status: 503 }\n      );\n    } else {\n      // خطأ في إعداد الطلب\n      console.error(\"Setup error:\", error.message);\n      return NextResponse.json(\n        {\n          success: false,\n          error: {\n            message: \"حدث خطأ غير متوقع. يرجى المحاولة مرة أخرى.\",\n            code: \"UNKNOWN_ERROR\",\n          },\n        },\n        { status: 500 }\n      );\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}