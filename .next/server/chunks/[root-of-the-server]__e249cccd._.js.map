{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/work/whatsssss/whatsssss/src/app/api/customers/route.ts"],"sourcesContent":["// src/app/api/customers/route.ts\nimport { NextResponse } from 'next/server';\nimport axios from 'axios';\n\nconst API_BASE = 'https://neosending.com/api/neosending/Whatsapp';\n\n// دالة لاستخراج التوكن من الهيدر\nfunction getAuthToken(request: Request): string | null {\n  const authHeader = request.headers.get('authorization');\n  if (authHeader && authHeader.startsWith('Bearer ')) {\n    return authHeader;\n  }\n  return null;\n}\n\nexport async function GET(request: Request) {\n  try {\n    // استخراج التوكن من الهيدر\n    const authToken = getAuthToken(request);\n    if (!authToken) {\n      return NextResponse.json(\n        { success: false, error: 'لم يتم توفير توكن المصادقة' },\n        { status: 401 }\n      );\n    }\n\n    const response = await axios.get(`${API_BASE}/customer`, {\n      headers: {\n        'Accept': 'application/json',\n        'Authorization': authToken \n      },\n      timeout: 30000\n    });\n\n    // معالجة الهيكل المختلف للبيانات\n    const responseData = response.data;\n    let customers = [];\n    let totalCount = 0;\n\n    if (Array.isArray(responseData)) {\n      // إذا كانت البيانات مصفوفة مباشرة\n      customers = responseData;\n      totalCount = responseData.length;\n    } else if (responseData.items && Array.isArray(responseData.items)) {\n      // إذا كانت البيانات تحتوي على items كصفة\n      customers = responseData.items;\n      totalCount = responseData.totalCount || responseData.items.length;\n    } else if (Array.isArray(responseData.items)) {\n      // الهيكل الغريب الذي تتلقاه حالياً\n      const firstItem = responseData.items[0];\n      customers = firstItem.items || [];\n      totalCount = firstItem.totalCount || 0;\n    }\n\n    return NextResponse.json({\n      success: true,\n      items: customers,\n      totalCount: totalCount\n    });\n\n  } catch (error) {\n    console.error('API Error:', error);\n    return NextResponse.json(\n      { \n        success: false,\n        error: 'Failed to fetch customers',\n        details: error instanceof Error ? error.message : String(error)\n      },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST(request: Request) {\n  try {\n    // استخراج التوكن من الهيدر\n    const authToken = getAuthToken(request);\n    if (!authToken) {\n      return NextResponse.json(\n        { success: false, error: 'لم يتم توفير توكن المصادقة' },\n        { status: 401 }\n      );\n    }\n\n    const requestData = await request.json();\n\n    // التحقق من الحقول المطلوبة\n    const requiredFields = ['fullName', 'mobileNumber', 'userName', 'password'];\n    const missingFields = requiredFields.filter(field => !requestData[field]);\n\n    if (missingFields.length > 0) {\n      return NextResponse.json(\n        { \n          success: false,\n          error: `الحقول التالية مطلوبة: ${missingFields.join(', ')}`\n        },\n        { status: 400 }\n      );\n    }\n\n    const response = await axios.post(`${API_BASE}/customer`, requestData, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'text/plain',\n        'Authorization': authToken\n      }\n    });\n\n    return NextResponse.json({\n      success: true,\n      data: response.data\n    });\n\n  } catch (error: any) {\n    console.error('Error creating customer:', error.response?.data || error.message);\n    return NextResponse.json(\n      { \n        success: false,\n        error: 'فشل في إنشاء العميل',\n        details: error.response?.data || error.message\n      },\n      { status: error.response?.status || 500 }\n    );\n  }\n}\nexport const dynamic = 'force-dynamic';"],"names":[],"mappings":"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","debugId":null}}]
}